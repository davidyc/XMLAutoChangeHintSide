<Activity mc:Ignorable="sap sap2010 sads" x:Class="GoogleCheckUI"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="inOut_HasErrors" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="inOut_Browser" Type="InOutArgument(ui:Browser)" />
    <x:Property Name="in_VendorName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  
  <sap2010:WorkflowViewState.IdRef>GoogleCheckUI_1</sap2010:WorkflowViewState.IdRef>

  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>

  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>

  <Sequence DisplayName="GoogleCheckUI" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="timeoutMsLarge" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="firstFillpageSelectors" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="secondFillpageSelectors" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="attachItemSelectors" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="navigationSelectors" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="requiredFirstFillPageSelectors" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="requiredNavigationSelectors" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="requiredAttachItemSelectors" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="requiredSecondFillPageSelectors" />
      <Variable x:TypeArguments="njl:JArray" Name="GoogleTestDataArray" />
      <Variable x:TypeArguments="x:String" Name="TestDataString" />
      <Variable x:TypeArguments="ui:GenericValue" Name="GoogleSystemUrl" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="FirstPageDataTest" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="SecondPageDataTest" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="firstRequiredData" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of string)]" Name="unknownTestData" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="secondRequiredData" />
      <Variable x:TypeArguments="x:String" Name="shareFolderPath" />
      <Variable x:TypeArguments="ui:GenericValue" Name="refID" />
    </Sequence.Variables>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="BSS_TimeoutMsLarge" DisplayName="Get large timeout" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Int32">[timeoutMsLarge]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="OutgoingInvoices_UIWatchDogSharedPath" DisplayName="Get FolderPath Asset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_3">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[shareFolderPath]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <Sequence DisplayName="Initialize selectors " sap2010:WorkflowViewState.IdRef="Sequence_2">
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="Checking UI For invoice type" />
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke initialize selectors file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Google\GoogleInitializeSelectors.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_FirstFillPageSelectors">[firstFillpageSelectors]</OutArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_SecondFillPageSelectors">[secondFillpageSelectors]</OutArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_NavigationSelectors">[navigationSelectors]</OutArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_attachItemSelectors">[attachItemSelectors]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[shareFolderPath]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="Init Application test data" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke initialize selectors file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Google\GoogleInitializeTestData.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_FirstPageDataTest">[FirstPageDataTest]</OutArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_SecondPageDataTest">[SecondPageDataTest]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[shareFolderPath]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="Open brower" />
          <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Google_Url " DisplayName="Get Google Url asset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
            <ui:GetRobotAsset.Value>
              <OutArgument x:TypeArguments="ui:GenericValue">[GoogleSystemUrl]</OutArgument>
            </ui:GetRobotAsset.Value>
          </ui:GetRobotAsset>
          <If Condition="[inOut_Browser is nothing]" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <ui:OpenBrowser BrowserType="Firefox" DisplayName="Open browser" Hidden="False" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" NewSession="True" Private="False" UiBrowser="[inOut_Browser]" Url="[GoogleSystemUrl]">
                <ui:OpenBrowser.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize window" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                  </ActivityAction>
                </ui:OpenBrowser.Body>
              </ui:OpenBrowser>
            </If.Then>
            <If.Else>
              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="Has open browser" />
            </If.Else>
          </If>
          <Sequence DisplayName="Check fill page UI" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="Navigating to FillPage" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Check fill page UI file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Google\GoogleCheckFillPageU.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:Browser" x:Key="in_Browser">[inOut_Browser]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_FirstFillPageSelectors">[firstFillpageSelectors]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_SecondFillPageSelectors">[secondFillpageSelectors]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_NavigationSelectors">[navigationSelectors]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_FirstPageDataTest">[FirstPageDataTest]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_SecondPageDataTest">[SecondPageDataTest]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_AttachItemSelectors">[attachItemSelectors]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Vendor">[in_VendorName]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[shareFolderPath]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="ui:FindElementException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="ui:FindElementException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:FindElementException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
              <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[refID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">[new Random().Next(10000, 99999)]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Trace message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[&quot;RefID#: &quot; + refID + &quot;. UI changes: &quot; + Environment.NewLine + exception.Message]" />
              <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[inOut_HasErrors]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                </Assign.Value>
              </Assign>
              <ui:RemoveLogFields DisplayName="Remove log fields" sap2010:WorkflowViewState.IdRef="RemoveLogFields_1">
                <ui:RemoveLogFields.Fields>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                    <InArgument x:TypeArguments="x:String">NotFoundItems</InArgument>
                  </scg:List>
                </ui:RemoveLogFields.Fields>
              </ui:RemoveLogFields>
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:ArgumentException" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <ActivityAction x:TypeArguments="s:ArgumentException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:ArgumentException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
              <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[refID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">[new Random().Next(10000, 99999)]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Trace message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Error" Message="[&quot;RefID#: &quot; + refID + &quot;. Invalid arguments! &quot; + Environment.NewLine + exception.Message]" />
              <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[inOut_HasErrors]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[&quot;RefID#: &quot; + refID + &quot;. &quot; + exception.Message]" />
              <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[inOut_HasErrors]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                </Assign.Value>
              </Assign>
              <ui:RemoveLogFields DisplayName="Remove log fields" sap2010:WorkflowViewState.IdRef="RemoveLogFields_2">
                <ui:RemoveLogFields.Fields>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                    <InArgument x:TypeArguments="x:String">UnsupportedKey</InArgument>
                  </scg:List>
                </ui:RemoveLogFields.Fields>
              </ui:RemoveLogFields>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d11DOlxVc2Vyc1xTZXJnZXlfRGF2eWRvdjJcb3V0Z29pbmctaW52b2ljZXNcVWlQYXRoXFVJQ2hhbmdlc1dhdGNoZG9nXEdvb2dsZVxHb29nbGVDaGVja1VJLnhhbWxRUQOKAg4CAQFiPmJVAgECZwVrGAIBaGwFcBgCAWRxBXwQAgFVfQWFARACAUyGAQWIAhACAQNpMGlAAgFqZzZnSgIBaW4xbkICAWZsNmxdAgFlcgdylQECAWJzB3sfAgFWfgeEAR8CAU2IAQmwARQCASW4AQ3RARgCARjZAQ3rARgCAQ3zAQ2EAhgCAQRydHKSAQIBY3VwdYgBAgFgdnF2igECAV54bXiCAQIBXHdtd4IBAgFac78Bc+YBAgFZeUh5WQIBV4EBbIEBgAECAVOAAWuAAX4CAVF+vwF+5QECAVCCAUiCAVkCAU6JAQuJAYgBAgFKigELjgEeAgFGjwELnwEQAgE9oAELrwEWAgEmuQEPwAEYAgEhwQEPwQHtAQIBH8IBD8kBGAIBG8oBD9ABJAIBGdoBD+EBGAIBFOIBD+IB9AECARLjAQ/qARgCAQ70AQ/0AcYBAgEL9QEP/AEYAgEH/QEPgwIkAgEFiQF4iQGFAQIBS4wBPowBTwIBSIoBPIoBSQIBR48BGY8BNQIBPpEBD5oBIAIBQZ0BD50BkgECAT+hAQ2hAZYBAgE7ogENrgElAgEnvgFBvgFiAgEkuwFCuwFJAgEiwQGDAcEB6gECASDHATvHAT8CAR7EATzEAU0CARzNATzNAUkCARrfAUHfAWICARfcAULcAUkCARXiAYMB4gHxAQIBE+gBO+gBPwIBEeUBPOUBTQIBD/QBfvQBwwECAQz6ATv6AT8CAQr3ATz3AU0CAQiAAjyAAkoCAQaRAbsBkQHMAQIBRJEB0QGRAeQBAgFDlwEVlwGNAQIBQp0BfZ0BjwECAUChAXuhAZMBAgE8qAFvqAGCAQIBOaUBdKUBjAECATerAUqrAVkCATWnAXGnAYYBAgEzqQFwqQGEAQIBMaoBcaoBhgECAS+kAU2kAVwCAS2iAcMBogHlAQIBLKYBdaYBjgECASqsAU6sAV8CASg=</sads:DebugSymbol.Symbol>
  </Sequence>
  









  
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="414,22" />
      <sap2010:ViewStateData Id="GetRobotAsset_3" sap:VirtualizedContainerService.HintSize="414,22" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="414,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_8" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="414,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="753,91" />
      <sap2010:ViewStateData Id="GetRobotAsset_2" sap:VirtualizedContainerService.HintSize="753,22" />
      <sap2010:ViewStateData Id="MaximizeWindow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="OpenBrowser_1" sap:VirtualizedContainerService.HintSize="414,121">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="753,269" />
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="753,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="775,968">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="RemoveLogFields_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,477">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="400,546">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="400,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="RemoveLogFields_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="400,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="414,752">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="436,1633">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GoogleCheckUI_1" sap:VirtualizedContainerService.HintSize="476,1713" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>